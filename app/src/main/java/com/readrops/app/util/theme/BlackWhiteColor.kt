package com.readrops.app.util.theme

import androidx.compose.ui.graphics.Color

val primaryBlackWhiteLight = Color(0xFF000000)
val onPrimaryBlackWhiteLight = Color(0xFFFFFFFF)
val primaryContainerBlackWhiteLight = Color(0xFFE2E2E2)
val onPrimaryContainerBlackWhiteLight = Color(0xFF848484)
val secondaryBlackWhiteLight = Color(0xFF464647)
val onSecondaryBlackWhiteLight = Color(0xFFFFFFFF)
val secondaryContainerBlackWhiteLight = Color(0xFF000000)
val onSecondaryContainerBlackWhiteLight = Color(0xFFD9D8D7)
val tertiaryBlackWhiteLight = Color(0xFF000000)
val onTertiaryBlackWhiteLight = Color(0xFFFFFFFF)
val tertiaryContainerBlackWhiteLight = Color(0xFF1B1B1B)
val onTertiaryContainerBlackWhiteLight = Color(0xFF848484)
val errorBlackWhiteLight = Color(0xFF464647)
val onErrorBlackWhiteLight = Color(0xFFFFFFFF)
val errorContainerBlackWhiteLight = Color(0xFF000000)
val onErrorContainerBlackWhiteLight = Color(0xFFD9D8D7)
val backgroundBlackWhiteLight = Color(0xFFFFFFFF)
val onBackgroundBlackWhiteLight = Color(0xFF1B1B1B)
val surfaceBlackWhiteLight = Color(0xFFFCF8F8)
val onSurfaceBlackWhiteLight = Color(0xFF1C1B1B)
val surfaceVariantBlackWhiteLight = Color(0xFFFFFFFF)
val onSurfaceVariantBlackWhiteLight = Color(0xFF444748)
val outlineBlackWhiteLight = Color(0xFF747878)
val outlineVariantBlackWhiteLight = Color(0xFFC4C7C8)
val scrimBlackWhiteLight = Color(0xFF000000)
val inverseSurfaceBlackWhiteLight = Color(0xFF313030)
val inverseOnSurfaceBlackWhiteLight = Color(0xFFE2E2E2)
val inversePrimaryBlackWhiteLight = Color(0xFFC6C6C6)
val surfaceDimBlackWhiteLight = Color(0xFFE2E2E2)
val surfaceBrightBlackWhiteLight = Color(0xFFFCF8F8)
val surfaceContainerLowestBlackWhiteLight = Color(0xFFFFFFFF)
val surfaceContainerLowBlackWhiteLight = Color(0xFFE2E2E2)
val surfaceContainerBlackWhiteLight = Color(0xFFFFFFFF)
val surfaceContainerHighBlackWhiteLight = Color(0xFFE2E2E2)
val surfaceContainerHighestBlackWhiteLight = Color(0xFFFFFFFF)

val primaryBlackWhiteDark = Color(0xFFC6C6C6)
val onPrimaryBlackWhiteDark = Color(0xFF303030)
val primaryContainerBlackWhiteDark = Color(0xFF000000)
val onPrimaryContainerBlackWhiteDark = Color(0xFF969696)
val secondaryBlackWhiteDark = Color(0xFFC7C6C6)
val onSecondaryBlackWhiteDark = Color(0xFF303030)
val secondaryContainerBlackWhiteDark = Color(0xFF000000)
val onSecondaryContainerBlackWhiteDark = Color(0xFFD9D8D7)
val tertiaryBlackWhiteDark = Color(0xFFC6C6C6)
val onTertiaryBlackWhiteDark = Color(0xFF303030)
val tertiaryContainerBlackWhiteDark = Color(0xFF000000)
val onTertiaryContainerBlackWhiteDark = Color(0xFFFFFFFF)
val errorBlackWhiteDark = Color(0xFFC7C6C6)
val onErrorBlackWhiteDark = Color(0xFF303030)
val errorContainerBlackWhiteDark = Color(0xFF000000)
val onErrorContainerBlackWhiteDark = Color(0xFFD9D8D7)
val backgroundBlackWhiteDark = Color(0xFF000000)
val onBackgroundBlackWhiteDark = Color(0xFFE2E2E2)
val surfaceBlackWhiteDark = Color(0xFF000000)
val onSurfaceBlackWhiteDark = Color(0xFFE5E2E1)
val surfaceVariantBlackWhiteDark = Color(0xFF000000)
val onSurfaceVariantBlackWhiteDark = Color(0xFFC4C7C8)
val outlineBlackWhiteDark = Color(0xFF8E9192)
val outlineVariantBlackWhiteDark = Color(0xFF444748)
val scrimBlackWhiteDark = Color(0xFF000000)
val inverseSurfaceBlackWhiteDark = Color(0xFFE5E2E1)
val inverseOnSurfaceBlackWhiteDark = Color(0xFF313030)
val inversePrimaryBlackWhiteDark = Color(0xFF000000)
val surfaceDimBlackWhiteDark = Color(0xFF000000)
val surfaceBrightBlackWhiteDark = Color(0xFF000000)
val surfaceContainerLowestBlackWhiteDark = Color(0xFF0E0E0E)
val surfaceContainerLowBlackWhiteDark = Color(0xFF1C1B1B)
val surfaceContainerBlackWhiteDark = Color(0xFF000000)
val surfaceContainerHighBlackWhiteDark = Color(0xFF2A2A2A)
val surfaceContainerHighestBlackWhiteDark = Color(0xFF000000)
